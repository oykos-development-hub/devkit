{"version":3,"file":"index.stories-7d173916.js","sources":["../../src/components/alert/types.ts","../../src/components/alert/styles/content.ts","../../src/components/alert/styles/container.ts","../../src/components/alert/index.tsx"],"sourcesContent":["import { DefaultTheme } from \"styled-components\";\nimport React from \"react\";\n\nexport enum AlertVariants {\n  primary = \"primary\",\n  error = \"error\",\n  success = \"success\",\n  info = \"info\",\n}\n\nexport enum AlertSizes {\n  xs = \"xs\",\n  sm = \"sm\",\n  md = \"md\",\n  lg = \"lg\",\n  xl = \"xl\",\n}\n\nexport interface AlertProps {\n  content?: React.ReactNode | string;\n  size?: AlertSizes;\n  variant: AlertVariants;\n  button?: JSX.Element | React.ReactNode;\n  className?: string;\n  icon?: JSX.Element | React.ReactNode;\n  closeIcon?: boolean;\n  additionalText?: string;\n  onClose?: (e?: React.MouseEvent<any>) => any;\n  children?: JSX.Element | React.ReactNode;\n  theme?: DefaultTheme;\n  style?: React.CSSProperties;\n}\n","import React from \"react\";\nimport styled, { css, DefaultTheme } from \"styled-components\";\nimport { AlertSizes, AlertVariants } from \"../types\";\nimport { Theme } from \"../../../shared/theme\";\nimport { TypographyVariants } from \"../../typography/variants\";\n\nexport const Content = styled.div<{\n  size: AlertSizes;\n  style?: React.CSSProperties | undefined;\n  theme?: DefaultTheme;\n}>(() => ({ size, style, theme }) => {\n  const themeToUse = theme || Theme || {};\n  const fontSize = themeToUse.typographyFontSize.body;\n\n  const textSize = {\n    xs: fontSize.sm,\n    sm: fontSize.sm,\n    md: fontSize.md,\n    lg: fontSize.lg,\n    xl: fontSize.lg,\n  };\n\n  return css`\n    display: flex;\n    flex-direction: row;\n    padding: 0;\n    gap: 1rem;\n\n    & p {\n      font-size: ${style?.fontSize || textSize[size]} !important;\n    }\n\n    ${{ ...style }}\n  `;\n});\n","import React from \"react\";\nimport styled, { css, DefaultTheme } from \"styled-components\";\nimport { AlertSizes, AlertVariants } from \"../types\";\nimport { Theme } from \"../../../shared/theme\";\n\nexport const Container = styled.div<{\n  variant: AlertVariants;\n  size: AlertSizes | keyof typeof AlertSizes;\n  theme: DefaultTheme;\n  style: React.CSSProperties | undefined;\n}>(() => ({ theme, variant, size, style }) => {\n  const themeToUse = theme || Theme;\n  const { white, primary500, success500, error500, gray600 } = themeToUse.palette || {};\n\n  const background = {\n    primary: primary500,\n    success: success500,\n    error: error500,\n    info: gray600,\n  };\n\n  const padding = {\n    xs: \"0.5rem 0.875rem\",\n    sm: \"0.625rem 1rem\",\n    md: \"0.625rem 1.125rem\",\n    lg: \"0.75rem 1.25rem\",\n    xl: \"1rem 1.75rem\",\n  };\n\n  const textColor = {\n    primary: white,\n    success: white,\n    error: white,\n    info: white,\n  };\n\n  return css`\n    flex: none;\n    align-items: center;\n    max-width: 828px;\n    max-height: fit-content;\n    flex-grow: 1;\n    font-family: ${themeToUse.fontFamily?.one || \"sans-serif\"};\n    background-color: ${background[variant]};\n    color: ${style?.color || textColor[variant]} !important;\n    border-radius: 0.5rem;\n    padding: ${padding[size]};\n    gap: 0.75rem;\n    z-index: 999;\n\n    & p,\n    h1,\n    h2,\n    h3,\n    h4,\n    h5,\n    h6,\n    span,\n    label {\n      color: ${style?.color || textColor[variant]};\n    }\n\n    & svg path {\n      fill: ${style?.color || textColor[variant]} !important;\n      color: ${style?.color || textColor[variant]} !important;\n    }\n\n    ${{ ...style }}\n  `;\n});\n\nexport const Row = styled.div<{\n  size: AlertSizes;\n}>(() => ({ size }) => {\n  const padding = {\n    xs: \"0.5rem 0.875rem\",\n    sm: \"0.625rem 1rem\",\n    md: \"0.625rem 1.125rem\",\n    lg: \"0.75rem 1.25rem\",\n    xl: \"1rem 1.75rem\",\n  };\n\n  return css`\n    display: flex;\n    justify-content: space-between;\n    flex-direction: row;\n    align-content: flex-start;\n    order: 0;\n    flex-grow: 1;\n    word-wrap: break-word;\n    padding: ${padding[size]};\n  `;\n});\n","import React from \"react\";\nimport { AlertProps, AlertSizes, AlertVariants } from \"./types\";\nimport { Content } from \"./styles/content\";\nimport { Container, Row } from \"./styles/container\";\nimport { XIcon } from \"../icon\";\nimport { Typography } from \"../typography\";\n\nexport const Alert: React.FC<AlertProps> = ({\n  variant = AlertVariants.success,\n  content,\n  additionalText,\n  icon,\n  closeIcon = true,\n  onClose,\n  size = AlertSizes.md,\n  style,\n  theme,\n}) => (\n  <Container variant={variant} size={size} style={style} theme={theme}>\n    <Row size={size}>\n      <Content style={style} size={size} theme={theme}>\n        {icon && icon}\n        <Typography content={content} theme={theme} style={style} />\n      </Content>\n\n      {closeIcon && (\n        <Content style={style} size={size} theme={theme}>\n          <XIcon onClick={onClose} />\n        </Content>\n      )}\n    </Row>\n\n    {additionalText && (\n      <Row size={size}>\n        <Typography variant={\"p\"} content={additionalText} />\n      </Row>\n    )}\n  </Container>\n);\n"],"names":["AlertVariants","AlertSizes","Content","styled","size","style","theme","fontSize","Theme","textSize","css","Container","variant","themeToUse","white","primary500","success500","error500","gray600","background","padding","textColor","_a","Row","Alert","__name","success","content","additionalText","icon","onClose","md","_jsxs","_jsx","Typography","closeIcon","XIcon"],"mappings":"sZAGY,IAAAA,GAAAA,IACVA,EAAA,QAAU,UACVA,EAAA,MAAQ,QACRA,EAAA,QAAU,UACVA,EAAA,KAAO,OAJGA,IAAAA,GAAA,CAAA,CAAA,EAOAC,GAAAA,IACVA,EAAA,GAAK,KACLA,EAAA,GAAK,KACLA,EAAA,GAAK,KACLA,EAAA,GAAK,KACLA,EAAA,GAAK,KALKA,IAAAA,GAAA,CAAA,CAAA,ECJC,MAAAC,EAAUC,EAAO,IAI3B,IAAM,CAAC,CAAE,KAAAC,EAAM,MAAAC,EAAO,MAAAC,KAAY,CAE7B,MAAAC,GADaD,GAASE,GAAS,IACT,mBAAmB,KAEzCC,EAAW,CACf,GAAIF,EAAS,GACb,GAAIA,EAAS,GACb,GAAIA,EAAS,GACb,GAAIA,EAAS,GACb,GAAIA,EAAS,EAAA,EAGR,OAAAG;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA,oBAOUL,GAAA,YAAAA,EAAO,WAAYI,EAASL;AAAA;AAAA;AAAA,MAGzC,CAAE,GAAGC;GAEX,CAAC,EC7BYM,EAAYR,EAAO,IAK7B,IAAM,CAAC,CAAE,MAAAG,EAAO,QAAAM,EAAS,KAAAR,EAAM,MAAAC,KAAY,OAC5C,MAAMQ,EAAaP,GAASE,EACtB,CAAE,MAAAM,EAAO,WAAAC,EAAY,WAAAC,EAAY,SAAAC,EAAU,QAAAC,GAAYL,EAAW,SAAW,GAE7EM,EAAa,CACjB,QAASJ,EACT,QAASC,EACT,MAAOC,EACP,KAAMC,CAAA,EAGFE,EAAU,CACd,GAAI,kBACJ,GAAI,gBACJ,GAAI,oBACJ,GAAI,kBACJ,GAAI,cAAA,EAGAC,EAAY,CAChB,QAASP,EACT,QAASA,EACT,MAAOA,EACP,KAAMA,CAAA,EAGD,OAAAJ;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA,qBAMUY,EAAAT,EAAW,aAAX,YAAAS,EAAuB,MAAO;AAAA,wBACzBH,EAAWP;AAAA,cACtBP,GAAA,YAAAA,EAAO,QAASgB,EAAUT;AAAA;AAAA,eAExBQ,EAAQhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAaRC,GAAA,YAAAA,EAAO,QAASgB,EAAUT;AAAA;AAAA;AAAA;AAAA,eAI3BP,GAAA,YAAAA,EAAO,QAASgB,EAAUT;AAAA,gBACzBP,GAAA,YAAAA,EAAO,QAASgB,EAAUT;AAAA;AAAA;AAAA,MAGnC,CAAE,GAAGP;GAEX,CAAC,EAEYkB,EAAMpB,EAAO,IAEvB,IAAM,CAAC,CAAE,KAAAC,KASHM;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA,eARS,CACd,GAAI,kBACJ,GAAI,gBACJ,GAAI,oBACJ,GAAI,kBACJ,GAAI,cAAA,EAWeN;AAAA,GAEtB,ECrFMoB,EAAAC,EAAA,CAAA,CAAqC,QAAAb,EAAAZ,EAAA,QAClB0B,QAAAA,EACxBC,eAAAA,EACAC,KAAAA,EACAC,UAAAA,EAAAA,GACY,QAAAC,EACZA,KAAAA,EAAAA,EAAAA,GACkBC,MAAAA,EAClB1B,MAAAA,CAEF,IAAA2B,EAAArB,EAAA,CACY,QAAAC,EAAC,KAAAR,EAAkB,MAAAC,EAAY,MAAAC,EAAc,SAAA,CAAA0B,EAAAT,EAAA,CACjD,KAAAnB,EAAC,SAAA,CAAA4B,EAAA9B,EAAA,CACK,MAAAG,EAAC,KAAAD,EAAc,MAAAE,EAAY,SAAA,CAAAuB,GAAAA,EAAAI,EAAAC,EAAA,CAEtB,QAAAP,EAAC,MAAArB,EAAkB,MAAAD,CAAc,CAAA,CAAA,CAAgB,CAAA,EAAA8B,GAAAF,EAAA/B,EAAA,CAIpD,MAAAG,EAAC,KAAAD,EAAc,MAAAE,EAAY,SAAA2B,EAAAG,EAAA,CAC3B,QAAAN,CAAUA,CAAAA,CAAQ,CAAA,CAAA,CAE3B,CAAA,EAAAF,GAAAK,EAAAV,EAAA,CAIG,KAAAnB,EAAC,SAAA6B,EAAAC,EAAA,CACQ,QAAA,IAAU,QAAAN,CAAcA,CAAAA,CAAe,CAAA,CAAA,CAErD,CAAA,EA7BE;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"}