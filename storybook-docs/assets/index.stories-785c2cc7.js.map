{"version":3,"file":"index.stories-785c2cc7.js","sources":["../../src/components/tooltip/styles.ts","../../src/components/tooltip/types.ts","../../src/components/tooltip/index.tsx"],"sourcesContent":["import styled, { css } from \"styled-components\";\nimport { TooltipProps } from \"./types\";\n\n// colors\nconst backgroundColor = (props: TooltipProps) => (props.variant === \"standard\" ? \"white\" : \"#004FFF\");\nconst color = (props: TooltipProps) => (props.variant === \"standard\" ? \"black\" : \"white\");\n\n// tooltip positions\nconst TooltipPositions = {\n  top: css`\n    & #tooltip-content {\n      left: 50%;\n      bottom: 100%;\n      transform: translate(-50%, -0.75em);\n    }\n  `,\n  topLeft: css`\n    & #tooltip-content {\n      right: 100%;\n      bottom: 100%;\n      transform: translate(1.5em, -0.75em);\n    }\n  `,\n  topRight: css`\n    & #tooltip-content {\n      left: 100%;\n      bottom: 100%;\n      transform: translate(-1.5em, -0.75em);\n    }\n  `,\n  left: css`\n    & #tooltip-content {\n      top: 50%;\n      right: 100%;\n      transform: translate(-0.75em, -50%);\n    }\n  `,\n  bottom: css`\n    & #tooltip-content {\n      top: 100%;\n      left: 50%;\n      transform: translate(-50%, 0.75em);\n    }\n  `,\n  right: css`\n    & #tooltip-content {\n      top: 50%;\n      left: 100%;\n      transform: translate(0.75em, -50%);\n    }\n  `,\n};\n\n// arrow styles & arrow positions\nconst sharedArrowStyles = css`\n  content: \"\";\n  position: absolute;\n  border: 6px solid;\n`;\n\nconst ArrowPositions = {\n  top: css`\n    #tooltip-content::after {\n      ${sharedArrowStyles}\n      top: 100%;\n      left: 50%;\n      transform: translateX(-50%);\n      border-color: ${backgroundColor} transparent transparent transparent;\n    }\n  `,\n  topLeft: css`\n    #tooltip-content::after {\n      ${sharedArrowStyles}\n      top: 100%;\n      left: 100%;\n      transform: translateX(-1.5em);\n      border-color: ${backgroundColor} transparent transparent transparent;\n    }\n  `,\n  topRight: css`\n    #tooltip-content::after {\n      ${sharedArrowStyles}\n      top: 100%;\n      right: 100%;\n      transform: translateX(1.5em);\n      border-color: ${backgroundColor} transparent transparent transparent;\n    }\n  `,\n  left: css`\n    #tooltip-content::after {\n      ${sharedArrowStyles}\n      top: 50%;\n      left: 100%;\n      transform: translateY(-50%);\n      border-color: transparent transparent transparent ${backgroundColor};\n    }\n  `,\n  bottom: css`\n    #tooltip-content::after {\n      ${sharedArrowStyles}\n      left: 50%;\n      bottom: 100%;\n      transform: translateX(-50%);\n      border-color: transparent transparent ${backgroundColor} transparent;\n    }\n  `,\n  right: css`\n    #tooltip-content::after {\n      ${sharedArrowStyles}\n      top: 50%;\n      right: 100%;\n      transform: translateY(-50%);\n      border-color: transparent ${backgroundColor} transparent transparent;\n    }\n  `,\n};\n\n// styles based on current position\nconst tooltipPosition = (props: TooltipProps) => TooltipPositions[props.position];\nconst arrowPosition = (props: TooltipProps) => (props.arrow ? ArrowPositions[props.position] : null);\n\nexport const StyledTooltip = styled.div<TooltipProps>`\n  position: relative;\n\n  #tooltip-content {\n    visibility: hidden;\n    background-color: ${backgroundColor};\n    border-radius: 0.5em;\n    white-space: nowrap;\n    z-index: 1;\n    text-align: center;\n    padding: 0.5em 0.75em;\n    position: absolute;\n    box-shadow: 0px 8px 14px 3px rgba(0, 0, 0, 0.1);\n    & h6,\n    & p {\n      color: ${color};\n    }\n  }\n\n  &:hover #tooltip-content {\n    visibility: visible;\n  }\n\n  ${tooltipPosition}\n  ${arrowPosition}\n`;\n","import React, { ReactElement } from \"react\";\nimport { CSSProperties, DefaultTheme } from \"styled-components\";\n\nexport enum Positions {\n  bottom = \"bottom\",\n  left = \"left\",\n  right = \"right\",\n  top = \"top\",\n  topLeft = \"topLeft\",\n  topRight = \"topRight\",\n}\n\nexport interface TooltipProps {\n  variant?: \"standard\" | \"filled\";\n  theme?: DefaultTheme;\n  position: Positions | keyof typeof Positions;\n  style?: CSSProperties;\n  title?: string;\n  content: string | ReactElement;\n  arrow?: boolean;\n  children?: React.ReactNode;\n}\n","import React from \"react\";\nimport { Typography } from \"../typography\";\nimport { StyledTooltip } from \"./styles\";\nimport { Positions, TooltipProps } from \"./types\";\n\nconst Tooltip: React.FC<TooltipProps> = ({ position, content, children, title, ...props }) => {\n  const tooltipPosition = Positions[position] || \"bottom\";\n\n  return (\n    <StyledTooltip {...props} position={tooltipPosition} content={content}>\n      {children}\n      <div id=\"tooltip-content\">\n        {title && <Typography content={title} variant=\"h6\" />}\n        <Typography content={content} variant=\"body1\" />\n      </div>\n    </StyledTooltip>\n  );\n};\n\nexport default Tooltip;\n"],"names":["backgroundColor","__name","props","color","TooltipPositions","css","sharedArrowStyles","ArrowPositions","tooltipPosition","arrowPosition","StyledTooltip","styled","Positions","Tooltip","position","content","children","title","_jsxs","_jsx","Typography","Tooltip$1"],"mappings":"8VAIA,MAAMA,EAAkBC,EAACC,GAAyBA,EAAM,UAAY,WAAa,QAAU,UAAnE,mBAClBC,EAAQF,EAACC,GAAyBA,EAAM,UAAY,WAAa,QAAU,QAAnE,SAGRE,EAAmB,CACvB,IAAKC;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA,IAOL,QAASA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA,IAOT,SAAUA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA,IAOV,KAAMA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA,IAON,OAAQA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA,IAOR,MAAOA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA,GAOT,EAGMC,EAAoBD;AAAAA;AAAAA;AAAAA;AAAAA,EAMpBE,EAAiB,CACrB,IAAKF;AAAAA;AAAAA,QAECC;AAAA;AAAA;AAAA;AAAA,sBAIcN;AAAA;AAAA,IAGpB,QAASK;AAAAA;AAAAA,QAEHC;AAAA;AAAA;AAAA;AAAA,sBAIcN;AAAA;AAAA,IAGpB,SAAUK;AAAAA;AAAAA,QAEJC;AAAA;AAAA;AAAA;AAAA,sBAIcN;AAAA;AAAA,IAGpB,KAAMK;AAAAA;AAAAA,QAEAC;AAAA;AAAA;AAAA;AAAA,0DAIkDN;AAAA;AAAA,IAGxD,OAAQK;AAAAA;AAAAA,QAEFC;AAAA;AAAA;AAAA;AAAA,8CAIsCN;AAAA;AAAA,IAG5C,MAAOK;AAAAA;AAAAA,QAEDC;AAAA;AAAA;AAAA;AAAA,kCAI0BN;AAAA;AAAA,GAGlC,EAGMQ,EAAkBP,EAACC,GAAwBE,EAAiBF,EAAM,UAAhD,mBAClBO,EAAgBR,EAACC,GAAyBA,EAAM,MAAQK,EAAeL,EAAM,UAAY,KAAzE,iBAETQ,EAAgBC,EAAO;AAAA;AAAA;AAAA;AAAA;AAAA,wBAKZX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAUTG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAQXK;AAAA,IACAC;AAAA,EC9IQ,IAAAG,GAAAA,IACVA,EAAA,OAAS,SACTA,EAAA,KAAO,OACPA,EAAA,MAAQ,QACRA,EAAA,IAAM,MACNA,EAAA,QAAU,UACVA,EAAA,SAAW,WANDA,IAAAA,GAAA,CAAA,CAAA,ECEZ,MAAAC,EAAAZ,EAAA,CAAA,CAAyC,SAAAa,EAAEA,QAAAA,EAAUC,SAAAA,EAASC,MAAAA,KAAUC,CAAgB,IAAA,CACtF,MAAAT,EAAAI,EAAAE,IAAA,SAEA,OAAAI,EAAAR,EAAA,CACgB,GAAAR,EAAKA,SAAAA,EAAiBM,QAAAA,EAAiB,SAAA,CAAAQ,EAAAE,EAAA,MAAA,CAEnD,GAAA,kBAAQ,SAAA,CAAAD,GAAAE,EAAAC,EAAA,CACe,QAAAH,EAAUA,QAAAA,IAAe,CAAA,EAAAE,EAAAC,EAAA,CACnC,QAAAL,EAAC,QAAA,OAA0B,CAAA,CAAA,CAAU,CAAA,CAAA,CAC5C,CAAA,CAGZ,EAZA,WAcAM,EAAAR;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"}