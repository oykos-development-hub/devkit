{"version":3,"file":"index.stories-b881a3a4.js","sources":["../../src/components/alert/types.ts","../../src/components/alert/styles/content.ts","../../src/components/alert/styles/container.ts","../../src/components/alert/index.tsx"],"sourcesContent":["import { DefaultTheme } from \"styled-components\";\nimport React from \"react\";\n\nexport enum AlertVariants {\n  primary = \"primary\",\n  error = \"error\",\n  success = \"success\",\n  info = \"info\",\n}\n\nexport enum AlertSizes {\n  sm = \"sm\",\n  md = \"md\",\n  lg = \"lg\",\n}\n\nexport interface AlertProps {\n  content?: React.ReactNode | string;\n  size?: AlertSizes;\n  variant: AlertVariants;\n  icon?: JSX.Element | React.ReactNode;\n  closeIcon?: boolean;\n  additionalText?: string;\n  onClose?: (e?: React.MouseEvent<any>) => any;\n  children?: JSX.Element | React.ReactNode;\n  theme?: DefaultTheme;\n  style?: React.CSSProperties;\n}\n","import React from \"react\";\nimport styled, { css, DefaultTheme } from \"styled-components\";\nimport { AlertSizes } from \"../types\";\nimport { Theme } from \"../../../shared/theme\";\n\nexport const Content = styled.div<{\n  size: AlertSizes;\n  style?: React.CSSProperties | undefined;\n  theme?: DefaultTheme;\n}>(() => ({ size, style, theme }) => {\n  const themeToUse = theme || Theme;\n  const { white } = themeToUse.palette || {};\n  const defaultColor = style?.color || white;\n\n  const textSize = {\n    sm: \"0.75rem\",\n    md: \"0.875rem\",\n    lg: \"1rem\",\n  };\n\n  const leftIconSize = {\n    sm: \"1.25rem\",\n    md: \"1.25rem\",\n    lg: \"1.5rem\",\n  };\n\n  const rightIconSize = {\n    sm: \"0.729rem\",\n    md: \"0.729rem\",\n    lg: \"0.875rem\",\n  };\n\n  const lineHeight = {\n    sm: \"1rem\",\n    md: \"1.25rem\",\n    lg: \"1.5rem\",\n  };\n\n  return css`\n    display: flex;\n    flex-direction: row;\n    padding: 0;\n    gap: 0.75rem;\n\n    & p {\n      font-size: ${textSize[size]};\n      line-height: ${lineHeight[size]};\n      color: ${defaultColor};\n    }\n\n    & p:nth-child(1) {\n      font-size: 0.875rem;\n      line-height: 1.25rem;\n      color: ${defaultColor};\n    }\n\n    & svg:first-child {\n      width: ${leftIconSize[size]} !important;\n      height: ${leftIconSize[size]} !important;\n    }\n\n    & svg:last-child {\n      width: ${rightIconSize[size]} !important;\n      height: ${rightIconSize[size]} !important;\n    }\n\n    & svg path {\n      fill: ${defaultColor} !important;\n      color: ${defaultColor} !important;\n    }\n\n    ${{ ...style }}\n  `;\n});\n","import React from \"react\";\nimport styled, { css, DefaultTheme } from \"styled-components\";\nimport { AlertSizes, AlertVariants } from \"../types\";\nimport { Theme } from \"../../../shared/theme\";\n\nexport const Container = styled.div<{\n  variant: AlertVariants;\n  theme: DefaultTheme;\n  style: React.CSSProperties | undefined;\n}>(() => ({ theme, variant, style }) => {\n  const themeToUse = theme || Theme;\n  const { primary500, success500, error500, gray600 } = themeToUse.palette || {};\n\n  const background = {\n    primary: primary500,\n    success: success500,\n    error: error500,\n    info: gray600,\n  };\n\n  return css`\n    flex: none;\n    align-items: center;\n    max-width: 828px;\n    max-height: fit-content;\n    flex-grow: 1;\n    font-family: ${themeToUse.fontFamily?.one || \"sans-serif\"};\n    background-color: ${background[variant]};\n    border-radius: 0.125rem;\n    padding: 0;\n    gap: 0.75rem;\n    z-index: 999;\n\n    ${{ ...style }}\n  `;\n});\n\nexport const Row = styled.div<{\n  size: AlertSizes;\n}>(() => ({ size }) => {\n  const gapSize = {\n    sm: \"0.75rem\",\n    md: \"0.75rem\",\n    lg: \"1rem\",\n  };\n\n  const padding = {\n    sm: \"0.5rem\",\n    md: \"0.75rem\",\n    lg: \"1rem\",\n  };\n\n  return css`\n    display: flex;\n    justify-content: space-between;\n    flex-direction: row;\n    align-content: flex-start;\n    align-items: center;\n    align-self: stretch;\n    word-wrap: break-word;\n    padding: ${padding[size]};\n    gap: ${gapSize[size]};\n  `;\n});\n","import React from \"react\";\nimport { AlertProps, AlertSizes, AlertVariants } from \"./types\";\nimport { Content } from \"./styles/content\";\nimport { Container, Row } from \"./styles/container\";\nimport { XIcon } from \"../icon\";\nimport { Typography } from \"../typography\";\n\nexport const Alert: React.FC<AlertProps> = ({\n  variant = AlertVariants.success,\n  content,\n  additionalText,\n  icon,\n  closeIcon = true,\n  onClose,\n  size = AlertSizes.md,\n  style,\n  theme,\n}) => (\n  <Container variant={variant} style={style} theme={theme}>\n    <Row size={size}>\n      <Content style={style} size={size} theme={theme}>\n        {icon && icon}\n        <Typography content={content} theme={theme} style={style} />\n      </Content>\n\n      {closeIcon && (\n        <Content style={style} size={size} theme={theme}>\n          <XIcon onClick={onClose} />\n        </Content>\n      )}\n    </Row>\n\n    {additionalText && (\n      <Row size={size}>\n        <Content style={style} size={size} theme={theme}>\n          <Typography content={additionalText} theme={theme} style={style} />\n        </Content>\n      </Row>\n    )}\n  </Container>\n);\n"],"names":["AlertVariants","AlertSizes","Content","styled","size","style","theme","themeToUse","Theme","white","defaultColor","textSize","leftIconSize","rightIconSize","lineHeight","css","Container","variant","primary500","success500","error500","gray600","background","_a","Row","gapSize","Alert","__name","success","content","additionalText","icon","onClose","md","_jsxs","_jsx","Typography","closeIcon","XIcon"],"mappings":"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"}