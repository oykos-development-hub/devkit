{"version":3,"file":"index-4d8d9e4d.js","sources":["../../src/components/input/styles/container.ts","../../src/components/input/styles/input.ts","../../src/components/input/styles/leftElement.ts","../../src/components/input/styles/rightElement.ts","../../src/components/input/index.tsx"],"sourcesContent":["import styled, { css } from \"styled-components\";\r\nimport { BodyMedium } from \"../../typography/styles/variants\";\r\nimport { InputProps } from \"../types\";\r\n\r\nexport const Container = styled.div(({ label, error, theme, hint }: InputProps) => {\r\n  const { error500, gray700 } = theme!.palette;\r\n\r\n  return css`\r\n    width: 100%;\r\n    min-width: ${label ? \"200px\" : \"3em\"};\r\n    padding: ${label ? \"1.75em\" : 0} 0 ${error || hint ? \"1.75em\" : 0} 0;\r\n    font-size: 14px;\r\n\r\n    & * {\r\n      font-size: 1em;\r\n    }\r\n\r\n    & > div {\r\n      position: relative;\r\n    }\r\n\r\n    ${BodyMedium}:first-child {\r\n      position: absolute;\r\n      top: -1.75em;\r\n      left: 0;\r\n    }\r\n\r\n    ${BodyMedium}:last-child {\r\n      position: absolute;\r\n      bottom: -1.75em;\r\n      left: 0;\r\n      color: ${error ? error500 : gray700};\r\n    }\r\n  `;\r\n});\r\n","import styled, { css } from \"styled-components\";\r\nimport { Theme } from \"../../../shared/theme\";\r\nimport { InputProps } from \"../types\";\r\n\r\nconst shared = ({ style, theme, error }: InputProps) => {\r\n  const { gray200, gray300, gray700, error200, error50, primary100, white } = theme!.palette;\r\n\r\n  return css`\r\n    width: 100%;\r\n    border-radius: ${theme!.borderRadius?.lg || \"0.5em\"};\r\n    border: ${`${theme!.borderWidth?.xs || \"1px\"} solid ${error ? error200 : gray300}`};\r\n    box-sizing: border-box;\r\n    outline: none;\r\n\r\n    &:focus {\r\n      border-color: ${error ? error200 : primary100};\r\n      outline: 3px solid ${error ? error50 : gray200};\r\n    }\r\n\r\n    &[disabled] {\r\n      color: ${gray300};\r\n      background-color: ${white};\r\n    }\r\n\r\n    &::placeholder {\r\n      color: ${gray700};\r\n    }\r\n\r\n    ${{ ...style }}\r\n  `;\r\n};\r\n\r\nexport const StyledInput = styled.input(({ style, theme, error, maxLength }: InputProps) => {\r\n  return css`\r\n    ${shared({ style, theme, error, maxLength })}\r\n    text-align: ${maxLength === 1 ? \"center\" : \"left\"};\r\n    height: 3em;\r\n  `;\r\n});\r\n\r\nexport const Textarea = styled.textarea(({ style, theme, error }: InputProps) => {\r\n  return css`\r\n    ${shared({ style, theme, error })}\r\n    resize: none;\r\n    height: 6em;\r\n  `;\r\n});\r\n","import styled from \"styled-components\";\r\n\r\nexport const LeftElement = styled.div`\r\n  position: absolute;\r\n  top: 50%;\r\n  left: 0;\r\n  transform: translateY(-50%);\r\n`;\r\n","import styled from \"styled-components\";\r\n\r\nexport const RightElement = styled.div`\r\n  position: absolute;\r\n  top: 50%;\r\n  right: 0;\r\n  transform: translateY(-50%);\r\n`;\r\n","import React, { useEffect, useRef, useState } from \"react\";\r\n\r\nimport { InputProps } from \"./types\";\r\nimport { Container } from \"./styles/container\";\r\nimport { StyledInput, Textarea } from \"./styles/input\";\r\nimport { Typography } from \"../typography\";\r\nimport { LeftElement } from \"./styles/leftElement\";\r\nimport { RightElement } from \"./styles/rightElement\";\r\nimport { Theme } from \"../../shared/theme\";\r\n\r\nexport const Input = ({\r\n  name,\r\n  value,\r\n  theme = Theme,\r\n  style,\r\n  disabled,\r\n  label,\r\n  textarea,\r\n  leftContent,\r\n  rightContent,\r\n  error,\r\n  hint,\r\n  placeholder,\r\n  onChange,\r\n  onBlur,\r\n  onFocus,\r\n  id,\r\n  inputRef,\r\n  ...props\r\n}: InputProps): React.ReactElement => {\r\n  const [leftElementWidth, setLeftElementWidth] = useState(0);\r\n  const [rightElementWidth, setRightElementWidth] = useState(0);\r\n\r\n  const leftElementRef = useRef<HTMLDivElement>(null);\r\n  const rightElementRef = useRef<HTMLDivElement>(null);\r\n\r\n  useEffect(() => {\r\n    if (leftContent && leftElementRef.current) setLeftElementWidth(leftElementRef.current?.offsetWidth);\r\n  }, [leftContent]);\r\n\r\n  useEffect(() => {\r\n    if (rightContent && rightElementRef.current) setRightElementWidth(rightElementRef.current?.offsetWidth);\r\n  }, [rightContent]);\r\n\r\n  const fieldProps = {\r\n    onChange,\r\n    onBlur,\r\n    onFocus,\r\n    name,\r\n    id,\r\n    disabled,\r\n    placeholder,\r\n    value,\r\n    error,\r\n    style: {\r\n      paddingLeft: `${leftContent ? `${leftElementWidth}px` : \"1em\"}`,\r\n      paddingRight: `${rightContent ? `${rightElementWidth}px` : \"1em\"}`,\r\n      ...style,\r\n    },\r\n  };\r\n\r\n  return (\r\n    <Container theme={theme} label={label} error={error} hint={hint}>\r\n      <div>\r\n        {label && <Typography variant=\"bodyMedium\" content={label} />}\r\n\r\n        {textarea ? (\r\n          <Textarea {...fieldProps} theme={theme || Theme} />\r\n        ) : (\r\n          <StyledInput {...fieldProps} {...props} theme={theme || Theme} ref={inputRef} />\r\n        )}\r\n\r\n        {leftContent && <LeftElement ref={leftElementRef}>{leftContent}</LeftElement>}\r\n\r\n        {rightContent && <RightElement ref={rightElementRef}>{rightContent}</RightElement>}\r\n\r\n        {error && !disabled && <Typography variant=\"bodyMedium\" content={error} />}\r\n\r\n        {hint && !error && <Typography variant=\"bodyMedium\" content={hint} />}\r\n      </div>\r\n    </Container>\r\n  );\r\n};\r\n"],"names":["Container","styled","label","error","theme","hint","error500","gray700","css","BodyMedium","shared","__name","style","gray200","gray300","error200","error50","primary100","white","_a","_b","StyledInput","maxLength","Textarea","LeftElement","RightElement","Input","name","value","Theme","disabled","textarea","leftContent","rightContent","placeholder","onChange","onBlur","onFocus","id","inputRef","leftElementWidth","setLeftElementWidth","useState","rightElementWidth","setRightElementWidth","leftElementRef","useRef","rightElementRef","useEffect","fieldProps","_jsxDEV","Typography","_jsxFileName","props"],"mappings":"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"}