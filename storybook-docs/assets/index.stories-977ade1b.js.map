{"version":3,"file":"index.stories-977ade1b.js","sources":["../../src/components/notification/elements/icon-wraper/style.ts","../../src/components/notification/elements/icon-wraper/index.tsx","../../src/components/notification/elements/shared.ts","../../src/components/notification/elements/additional-text/style.ts","../../src/components/notification/elements/additional-text/index.tsx","../../src/components/notification/elements/notification-board/style.ts","../../src/components/notification/elements/notification-board/index.tsx","../../src/components/notification/elements/column-wrapper/style.ts","../../src/components/notification/elements/column-wrapper/index.tsx","../../src/components/notification/elements/content-wrapper/style.ts","../../src/components/notification/elements/content-wrapper/index.tsx","../../src/components/notification/index.tsx","../../src/components/notification/types.ts"],"sourcesContent":["import styled from \"styled-components\";\n\nexport const StyledIconWrapper = styled.span`\n  &.left {\n    margin-right: 2.375rem;\n    position: relative;\n    align-self: flex-start;\n  }\n\n  &.right {\n    margin-left: 2.375rem;\n    position: relative;\n  }\n`;\n","import React from \"react\";\nimport { StyledIconWrapper } from \"./style\";\n\nexport const IconWrapper = ({ children, className, color }: any): React.ReactElement => (\n  <StyledIconWrapper color={color} className={className}>\n    {children}\n  </StyledIconWrapper>\n);\n","import { INotificationProps } from \"../types\";\n\nexport const getColor = (props: INotificationProps) => {\n  switch (props.variant) {\n    case \"error\":\n      return props.color || props.theme?.palette.light.one || \"#D9D9D9FF\";\n    case \"success\":\n      return props.color || props.theme?.palette.light.one || \"#D9D9D9FF\";\n    case \"neutral\":\n      return props.color || props.theme?.palette.light.one || \"#D9D9D9FF\";\n    case \"info\":\n      return props.color || props.theme?.palette.light.one || \"#D9D9D9FF\";\n    default:\n      return \"#D9D9D9FF\";\n  }\n};\n\nexport const getBgColor = (props: INotificationProps) => {\n  switch (props.variant) {\n    case \"error\":\n      return props.backgroundColor || props.theme?.palette.important.two || \"#f44336\";\n    case \"success\":\n      return props.backgroundColor || props.theme?.palette.info.three || \"#00b300\";\n    case \"neutral\":\n      return props.backgroundColor || props.theme?.palette.info.four || \"#598d82\";\n    case \"info\":\n      return props.backgroundColor || props.theme?.palette.info.four || \"#598d82\";\n    default:\n      return \"#6C757D\";\n  }\n};\n\nexport const initialShadow = \"0 0.0625rem 0.125rem rgba(97, 97, 97, 0.2), 0 0.125rem 0.25rem rgba(97, 97, 97, 0.2)\";\n","import styled from \"styled-components\";\n\nexport const StyledAdditionalText = styled.p`\n  display: flex;\n  align-content: center;\n  align-items: center;\n  text-align: justify;\n`;\n","import React from \"react\";\nimport { StyledAdditionalText } from \"./style\";\n\nexport const AdditionalText = ({ additionalText }: any): React.ReactElement => (\n  <StyledAdditionalText>{additionalText}</StyledAdditionalText>\n);\n","import styled from \"styled-components\";\nimport { INotificationProps } from \"../../types\";\nimport { getColor, getBgColor, initialShadow } from \"../shared\";\n\nexport const StyledNotificationBoard = styled.div<INotificationProps>`\n  font-family: ${(props) => props.fontFamily || props.theme?.fontFamily?.one || \"sans-serif\"};\n  background-color: ${getBgColor};\n  color: ${getColor};\n  box-shadow: ${(props) => (props.isSnackBar ? props.boxShadow || initialShadow : \"\")};\n  display: flex;\n  align-content: center;\n  align-items: center;\n  border-radius: ${(props) => props.borderRadius + \"rem\" || props.theme.borderRadius.md || \"0.5rem\"};\n  padding: 0.75rem 1rem;\n  min-height: 3rem;\n  z-index: 999;\n`;\n","import React from \"react\";\nimport { INotificationProps } from \"../../types\";\nimport { StyledNotificationBoard } from \"./style\";\n\nexport const NotificationBoard = (props: INotificationProps): React.ReactElement => (\n  <StyledNotificationBoard {...props}>{props.children}</StyledNotificationBoard>\n);\n","import styled from \"styled-components\";\n\nexport const StyledColumnWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\n","import { INotificationProps } from \"../../types\";\nimport React from \"react\";\nimport { StyledColumnWrapper } from \"./style\";\n\nexport const ColumnWrapper = (props: INotificationProps): React.ReactElement => (\n  <StyledColumnWrapper {...props}>{props.children}</StyledColumnWrapper>\n);\n","import styled from \"styled-components\";\n\nexport const StyledContentWrapper = styled.div`\n  display: flex;\n  justify-content: space-between;\n`;\n","import { INotificationProps } from \"../../types\";\nimport React from \"react\";\nimport { StyledContentWrapper } from \"./style\";\n\nexport const ContentWrapper = (props: INotificationProps): React.ReactElement => (\n  <StyledContentWrapper {...props}>{props.children}</StyledContentWrapper>\n);\n","import React from \"react\";\nimport { INotificationProps } from \"./types\";\nimport CircleCheckIcon from \"../icon/icons/CircleCheckIcon\";\nimport DangerIcon from \"../icon/icons/DangerIcon\";\nimport XIcon from \"../icon/icons/XIcon\";\nimport { IconWrapper } from \"./elements/icon-wraper\";\nimport { getColor } from \"./elements/shared\";\nimport { AdditionalText } from \"./elements/additional-text\";\nimport { NotificationBoard } from \"./elements/notification-board\";\nimport { ColumnWrapper } from \"./elements/column-wrapper\";\nimport { ContentWrapper } from \"./elements/content-wrapper\";\n\nexport const Notification: React.FC<INotificationProps> = (props) => {\n  const variant = props.variant;\n  const color = getColor(props);\n\n  const renderIcon = () => {\n    switch (variant) {\n      case \"success\":\n        return <CircleCheckIcon color={props.leftIconColor || props.color} top={props.iconTop + \"rem\" || \"1rem\"} />;\n      case \"info\":\n      case \"neutral\":\n      case \"error\":\n        return (\n          <DangerIcon\n            width={props.iconWidth || 20}\n            color={props.leftIconColor || props.color}\n            top={props.iconTop + \"rem\" || \"1rem\"}\n          />\n        );\n      default:\n        return null;\n    }\n  };\n\n  const content = () => (\n    <React.Fragment>\n      {/* ! Here comes Typography component */}\n      <p className={props.className}>{props.message}</p>\n\n      {props.closeIcon && (\n        <IconWrapper className=\"right\" color={color}>\n          <XIcon\n            width={props.iconWidth || 20}\n            top={props.iconTop + \"rem\"}\n            color={props.closeIconColor || props.color}\n            onClick={props.onClose}\n            position=\"relative\"\n          />\n        </IconWrapper>\n      )}\n    </React.Fragment>\n  );\n\n  const renderContent = () => (\n    <React.Fragment>\n      <ContentWrapper {...props}>{content()}</ContentWrapper>\n      {props.additionalText && <AdditionalText additionalText={props.additionalText} />}\n      {props.button && <div className=\"m-t-14 m-b-4\">{props.button}</div>}\n    </React.Fragment>\n  );\n\n  const renderChildren = () => (\n    <React.Fragment>\n      <IconWrapper className=\"left\">{renderIcon()}</IconWrapper>\n      <ColumnWrapper {...props}>{renderContent()}</ColumnWrapper>\n    </React.Fragment>\n  );\n\n  return <NotificationBoard {...props}>{renderChildren()}</NotificationBoard>;\n};\n","import { DefaultTheme } from \"styled-components\";\n\nexport enum NotificationVariants {\n  error = \"error\",\n  success = \"success\",\n  info = \"info\",\n  neutral = \"neutral\",\n}\n\nexport interface INotificationProps {\n  variant: NotificationVariants | keyof typeof NotificationVariants;\n  message: string | JSX.Element;\n  color?: string;\n  backgroundColor?: string;\n  leftIconColor?: string;\n  closeIconColor?: string;\n  iconWidth?: number;\n  iconTop?: number;\n  className?: string;\n  closeIcon?: boolean;\n  additionalText?: string;\n  boxShadow?: string;\n  borderRadius?: number | string;\n  button?: JSX.Element;\n  onClose?: () => void;\n  isSnackBar?: boolean;\n  fontFamily?: string;\n  children?: JSX.Element;\n  theme?: DefaultTheme;\n}\n"],"names":["StyledIconWrapper","styled","IconWrapper","__name","children","className","_jsx","color","getColor","props","_a","_b","_c","_d","getBgColor","initialShadow","StyledAdditionalText","AdditionalText","additionalText","StyledNotificationBoard","NotificationBoard","StyledColumnWrapper","ColumnWrapper","StyledContentWrapper","ContentWrapper","Notification","variant","renderIcon","CircleCheckIcon","DangerIcon","content","_jsxs","React","message","XIcon","onClose","renderContent","button","NotificationVariants"],"mappings":"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"}