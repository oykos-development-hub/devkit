var __makeTemplateObject = (this && this.__makeTemplateObject) || function (cooked, raw) {
    if (Object.defineProperty) { Object.defineProperty(cooked, "raw", { value: raw }); } else { cooked.raw = raw; }
    return cooked;
};
import { css } from "styled-components";
import { errorColor, basicColor, hoverColor } from "./colors";
import { inputStyles } from "./input-styles";
export var wrapperStyles = css(templateObject_1 || (templateObject_1 = __makeTemplateObject(["\n  width: ", ";\n  min-width: ", ";\n  padding: ", ";\n  margin: ", ";\n  font-size: ", ";\n\n  & * {\n    font-size: 1em;\n    line-height: 1;\n  }\n\n  & #input-content-wrapper {\n    position: relative;\n    display: flex;\n  }\n\n  & #input-left-icon-wrapper,\n  & #input-right-icon-wrapper {\n    width: 1.5em;\n    height: 1.5em;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    position: absolute;\n    top: 50%;\n    transform: translateY(-50%);\n    border: 1px solid lightgrey;\n  }\n\n  & #input-left-icon-wrapper {\n    left: ", ";\n  }\n  & #input-right-icon-wrapper {\n    right: ", ";\n  }\n\n  & label {\n    position: absolute;\n    top: -1.75em;\n    left: 0;\n    color: ", ";\n  }\n\n  & input,\n  & textarea {\n    ", "\n  }\n\n  & textarea {\n    resize: none;\n  }\n\n  & p {\n    font-size: 0.75em;\n    position: absolute;\n    left: 0;\n    bottom: -1.5em;\n    margin: 0;\n    color: ", ";\n  }\n"], ["\n  width: ", ";\n  min-width: ", ";\n  padding: ", ";\n  margin: ", ";\n  font-size: ", ";\n\n  & * {\n    font-size: 1em;\n    line-height: 1;\n  }\n\n  & #input-content-wrapper {\n    position: relative;\n    display: flex;\n  }\n\n  & #input-left-icon-wrapper,\n  & #input-right-icon-wrapper {\n    width: 1.5em;\n    height: 1.5em;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    position: absolute;\n    top: 50%;\n    transform: translateY(-50%);\n    border: 1px solid lightgrey;\n  }\n\n  & #input-left-icon-wrapper {\n    left: ", ";\n  }\n  & #input-right-icon-wrapper {\n    right: ", ";\n  }\n\n  & label {\n    position: absolute;\n    top: -1.75em;\n    left: 0;\n    color: ", ";\n  }\n\n  & input,\n  & textarea {\n    ", "\n  }\n\n  & textarea {\n    resize: none;\n  }\n\n  & p {\n    font-size: 0.75em;\n    position: absolute;\n    left: 0;\n    bottom: -1.5em;\n    margin: 0;\n    color: ", ";\n  }\n"])), function (props) { return (props.fullWidth ? "100%" : props.width || "400px"); }, function (props) { return (props.label ? "200px" : "3em"); }, function (props) { return "".concat(props.label ? "1.75em" : 0, " 0 ").concat(props.error ? "1.25em" : 0, " 0"); }, function (props) { return props.margin || "0em"; }, function (props) { return props.fontSize || "16px"; }, function (props) { return (props.variant === "standard" ? 0 : "0.75em"); }, function (props) { return (props.variant === "standard" ? 0 : "0.75em"); }, function (props) { return (props.disabled ? basicColor(props) : hoverColor(props)); }, inputStyles, function (props) { return errorColor(props); });
var templateObject_1;
//# sourceMappingURL=wrapper-styles.js.map