import { TypographyProps } from "./types";
export declare const H1: import("styled-components").StyledComponent<"h1", import("styled-components").DefaultTheme, TypographyProps, never>;
export declare const H2: import("styled-components").StyledComponent<"h2", import("styled-components").DefaultTheme, TypographyProps, never>;
export declare const H3: import("styled-components").StyledComponent<"h3", import("styled-components").DefaultTheme, TypographyProps, never>;
export declare const H4: import("styled-components").StyledComponent<"h4", import("styled-components").DefaultTheme, TypographyProps, never>;
export declare const H5: import("styled-components").StyledComponent<"h5", import("styled-components").DefaultTheme, TypographyProps, never>;
export declare const H6: import("styled-components").StyledComponent<"h6", import("styled-components").DefaultTheme, TypographyProps, never>;
export declare const Sub1: import("styled-components").StyledComponent<"span", import("styled-components").DefaultTheme, TypographyProps, never>;
export declare const Sub2: import("styled-components").StyledComponent<"span", import("styled-components").DefaultTheme, TypographyProps, never>;
export declare const Body1: import("styled-components").StyledComponent<"p", import("styled-components").DefaultTheme, TypographyProps, never>;
export declare const Body2: import("styled-components").StyledComponent<"p", import("styled-components").DefaultTheme, TypographyProps, never>;
export declare const Button: import("styled-components").StyledComponent<"span", import("styled-components").DefaultTheme, TypographyProps, never>;
export declare const Caption: import("styled-components").StyledComponent<"label", import("styled-components").DefaultTheme, TypographyProps, never>;
export declare const Overline: import("styled-components").StyledComponent<"p", import("styled-components").DefaultTheme, TypographyProps, never>;
export declare const Error: import("styled-components").StyledComponent<"span", import("styled-components").DefaultTheme, TypographyProps, never>;
